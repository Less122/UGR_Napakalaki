/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import Napakalaki.*;
import java.util.ArrayList;

/**
 *
 * @author less
 */
public class BadConsequenceView extends javax.swing.JPanel {

    /**
     * Creates new form BadConsequenceView
     */
    public BadConsequenceView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        levelTextField = new javax.swing.JTextField();
        vTreasuresTextField = new javax.swing.JTextField();
        levelsLabel = new javax.swing.JLabel();
        hTreasuresTextField = new javax.swing.JTextField();
        visibleTreasuresLabel = new javax.swing.JLabel();
        hiddenTreasuresLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaVisible = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaHidden = new javax.swing.JList<>();
        textLabel = new javax.swing.JLabel();

        levelTextField.setEditable(false);
        levelTextField.setFont(new java.awt.Font("Open Sans", 0, 10)); // NOI18N
        levelTextField.setText("0");

        vTreasuresTextField.setEditable(false);
        vTreasuresTextField.setFont(new java.awt.Font("Open Sans", 0, 10)); // NOI18N
        vTreasuresTextField.setText("0");

        levelsLabel.setText("Levels:");

        hTreasuresTextField.setEditable(false);
        hTreasuresTextField.setFont(new java.awt.Font("Open Sans", 0, 10)); // NOI18N
        hTreasuresTextField.setText("0");

        visibleTreasuresLabel.setText("Visible Treasures:");

        hiddenTreasuresLabel.setText("Hidden Treasures:");

        listaVisible.setToolTipText("");
        jScrollPane1.setViewportView(listaVisible);

        jScrollPane2.setViewportView(listaHidden);

        textLabel.setFont(new java.awt.Font("DejaVu Serif", 2, 10)); // NOI18N
        textLabel.setText("????");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(levelsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(levelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(visibleTreasuresLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vTreasuresTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hiddenTreasuresLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hTreasuresTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                            .addComponent(levelsLabel))
                        .addComponent(levelTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vTreasuresTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(visibleTreasuresLabel)
                            .addComponent(hiddenTreasuresLabel)
                            .addComponent(hTreasuresTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField hTreasuresTextField;
    private javax.swing.JLabel hiddenTreasuresLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField levelTextField;
    private javax.swing.JLabel levelsLabel;
    private javax.swing.JList<String> listaHidden;
    private javax.swing.JList<String> listaVisible;
    private javax.swing.JLabel textLabel;
    private javax.swing.JTextField vTreasuresTextField;
    private javax.swing.JLabel visibleTreasuresLabel;
    // End of variables declaration//GEN-END:variables

    
    BadConsequence badConsequenceModel;
    
	public void setBadConsequence( BadConsequence bq ) {
    
		if ( bq != null )
    {
      badConsequenceModel = bq;
	
	  String text = bq.getText();
	  int insert_carriage_return = 10;
	  
	  textLabel.setText( text );
   
			levelTextField.setText( String.valueOf( bq.getLevels() ) );
			
			// Vaciamos las listas
			vTreasuresTextField.setText( "0" );
			hTreasuresTextField.setText( "0" );
			listaVisible.setListData(new String[0] ); 
			listaHidden.setListData(new String[0] );
			
			if ( bq instanceof SpecificBadConsequence ) {
				ArrayList<TreasureKind> specificVisibleTreasures = new ArrayList( ((SpecificBadConsequence) bq).getSpecificVisibleTreasures() );
				ArrayList<TreasureKind> specificHiddenTreasures = new ArrayList( ((SpecificBadConsequence) bq).getSpecificHiddenTreasures() );
				
				for ( TreasureKind t : specificVisibleTreasures )
				{
					String tipo = "";
					
					if ( null != t ) switch ( t ) {
						case ARMOR:
							tipo = "ARMOR";			break;
						case BOTHHANDS:
							tipo = "BOTHHANDS"; break;
						case HELMET:
							tipo = "HELMET";		break;
						case ONEHAND:
							tipo = "ONEHAND";		break;
						case SHOES:
							tipo = "SHOES";			break;
					}
					
					String[] s = new String[] { tipo };
					listaVisible.setListData( s );
				}
				for ( TreasureKind t : specificHiddenTreasures )
				{
					String tipo = "";
					
					if ( null != t ) switch ( t ) {
						case ARMOR:
							tipo = "ARMOR";			break;
						case BOTHHANDS:
							tipo = "BOTHHANDS"; break;
						case HELMET:
							tipo = "HELMET";		break;
						case ONEHAND:
							tipo = "ONEHAND";		break;
						case SHOES:
							tipo = "SHOES";			break;
					}
					
					String[] s = new String[] { tipo };
					listaHidden.setListData( s );
					vTreasuresTextField.setText( "0" );
					hTreasuresTextField.setText( "0" );
				}
			}
			else if ( bq instanceof NumericBadConsequence ) {
				vTreasuresTextField.setText( String.valueOf( ((NumericBadConsequence) bq).getNVisibleTreasures() ) );
				hTreasuresTextField.setText( String.valueOf( ((NumericBadConsequence) bq).getNHiddenTreasures() ) );
			}
		}
		
    repaint();
    revalidate();
	}
					
	public void setHiddenBadConsequence() {
		
    textLabel.setText( "????" );
		levelTextField.setText( "?" );
		vTreasuresTextField.setText( "?" );
		hTreasuresTextField.setText( "?" );
		// Vaciamos las listas
		listaVisible.setListData(new String[0] ); 
		listaHidden.setListData(new String[0] );
			
    repaint();
    revalidate();
	}
}
